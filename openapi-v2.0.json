{
    "openapi": "3.0.0",
    "info": {
        "title": "rest",
        "description": "HiTrust ReSTful API for Portal",
        "termsOfService": "https://www.ssctech.com/",
        "contact": {
            "name": "HiTrust Support",
            "url": "https://www.ssctech.com/",
            "email": "BDT_HitrustSupport@au.dstsystems.com"
        },
        "license": {
            "name": "Proprietary",
            "url": "https://www.ssctech.com/"
        },
        "version": "12.2.0"
    },
    "servers": [
        {
            "url": "https://api.htdemo.au.dstbdemo.com",
            "description": ""
        },
        {
            "url": "https://api.htdemo.au.dstbdemo.com",
            "description": ""
        }
    ],
    "paths": {
        "/accounts": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get the communication options for this account.",
                "description": "",
                "operationId": "AccountGetCommunicationOptions",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Account objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Account"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Account resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Account"
                ],
                "summary": "Update the communication options for this account.",
                "description": "",
                "operationId": "AccountSetCommunicationOptions",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Account data for PATCH request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "annualReportCommunication": {
                                                "type": "string"
                                            },
                                            "annualReportElection": {
                                                "type": "string"
                                            },
                                            "noMarketing": {
                                                "type": "boolean"
                                            },
                                            "preferredCommunicationMode": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Account resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addresses": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get all addresses associated with this investor by investor key",
                "description": "",
                "operationId": "AddressGetAddressesByKey",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Address objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Address"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Address resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Address"
                ],
                "summary": "Add a new address to an existing investor, returning the key.",
                "description": "",
                "operationId": "AddressCreateAddress",
                "parameters": [],
                "requestBody": {
                    "description": "Address data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "country": {
                                                "type": "string"
                                            },
                                            "defaultAddress": {
                                                "type": "boolean"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "fax": {
                                                "type": "string"
                                            },
                                            "homePhone": {
                                                "type": "string"
                                            },
                                            "investorKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "line1": {
                                                "type": "string"
                                            },
                                            "line2": {
                                                "type": "string"
                                            },
                                            "line3": {
                                                "type": "string"
                                            },
                                            "mobilePhone": {
                                                "type": "string"
                                            },
                                            "postCode": {
                                                "type": "string"
                                            },
                                            "state": {
                                                "type": "string"
                                            },
                                            "workPhone": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the Address object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Address"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Address resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "update - Update an investor's details. All fields are optional.\n",
                "description": "",
                "operationId": "AddressRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_addresses_post_update"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Address resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorfundhierarchies": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorFundHierachy"
                ],
                "summary": "Get a list of funds the given advisor manages an account in.",
                "description": "",
                "operationId": "AdvisorFundHierachyGetFunds",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorFundHierachy objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorFundHierachy"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorFundHierachy resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorfunds": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorFund"
                ],
                "summary": "Get all the funds the advisor manage a holding in.",
                "description": "",
                "operationId": "AdvisorFundGetFunds",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorFund objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorFund"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorFund resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorhierarchies": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorHierarchy"
                ],
                "summary": "Get all the lowest level advisors under level 1 and 2 for the given currency.",
                "description": "",
                "operationId": "AdvisorHierarchyGetLevel3ByCurrency",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "level1AdvisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "level2AdvisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorHierarchy objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorHierarchy"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorHierarchy resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorinvestors": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorInvestor"
                ],
                "summary": "Get all the investors serviced (currently or historically) by this advisor.",
                "description": "",
                "operationId": "AdvisorInvestorGetInvestors",
                "parameters": [
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "investorNumber",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorSurname",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorGivenName",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorInvestor objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorInvestor"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorInvestor resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorpayments": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorPayment"
                ],
                "summary": "\n\t\t\t\tGet the commission payment details. Use paymentKey to look at a specific commision payment. \n\t\t\t\tUse the returned paymentKey to get the actual payment details. \n\t\t\t\t",
                "description": "",
                "operationId": "AdvisorPaymentGetCommissionPayments",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "paymentKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorPayment objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorPayment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorPayment resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisors": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Advisor"
                ],
                "summary": "Get the advisor details by criteria",
                "description": "",
                "operationId": "AdvisorGetAdvisors",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "advisorName",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "relationshipNumber",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Advisor objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Advisor"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Advisor resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorsummarybyunitclasses": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorSummaryByUnitClass"
                ],
                "summary": "Get the advisors FUM at unit class level.",
                "description": "",
                "operationId": "AdvisorSummaryByUnitClassGetTotals",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorSummaryByUnitClass objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorSummaryByUnitClass"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorSummaryByUnitClass resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorsummarybyunitclasses/{currencyCode}/cuurency": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorSummaryByUnitClass"
                ],
                "summary": "Get the advisors FUM at unit class level for a specific currency only.",
                "description": "",
                "operationId": "AdvisorSummaryByUnitClassGetTotalsByCurrency",
                "parameters": [
                    {
                        "name": "currencyCode",
                        "in": "path",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a single matching AdvisorSummaryByUnitClass object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/AdvisorSummaryByUnitClass"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match the AdvisorSummaryByUnitClass resource using the given identifier or one of the resources specified by a field in the request. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorsummarylevel1s": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorSummaryLevel1"
                ],
                "summary": "Get a holding summary for the given advisor and fund.",
                "description": "",
                "operationId": "AdvisorSummaryLevel1GetSummary",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level1AdvisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fundKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorSummaryLevel1 objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorSummaryLevel1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorSummaryLevel1 resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorsummarylevel2s": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorSummaryLevel2"
                ],
                "summary": "Get a list of sub-advisors and FUM.",
                "description": "",
                "operationId": "AdvisorSummaryLevel2GetSummary",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "level1AdvisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "unitClassKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorSummaryLevel2 objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorSummaryLevel2"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorSummaryLevel2 resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisorsummarylevel3s": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorSummaryLevel3"
                ],
                "summary": "Get a list of level2-advisors and FUM.",
                "description": "",
                "operationId": "AdvisorSummaryLevel3GetSummary",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "level1AdvisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "level2AdvisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "unitClassKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorSummaryLevel3 objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorSummaryLevel3"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorSummaryLevel3 resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/advisortotals": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AdvisorTotal"
                ],
                "summary": "Gets a breakdown of the funds managed by this advisor in different currencies.",
                "description": "",
                "operationId": "AdvisorTotalGetTotalByCurrency",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AdvisorTotal objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AdvisorTotal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AdvisorTotal resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agentaddresses": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AgentAddress"
                ],
                "summary": "Get all addresses linked to this agent",
                "description": "",
                "operationId": "AgentAddressGetAgentAddresses",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AgentAddress objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentAddress"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AgentAddress resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agentbankaccounts": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AgentBankAccount"
                ],
                "summary": "Get a list of bank accounts for the given advisor",
                "description": "",
                "operationId": "AgentBankAccountGetBankAccounts",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AgentBankAccount objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AgentBankAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AgentBankAccount resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/annualreportelectiontypes": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "AnnualReportElectionType"
                ],
                "summary": "Gets all annual election report types for the given company.",
                "description": "",
                "operationId": "AnnualReportElectionTypeGetAnnualReportElectionTypes",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching AnnualReportElectionType objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AnnualReportElectionType"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target AnnualReportElectionType resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assignments": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Get all the assignments for the given account.",
                "description": "",
                "operationId": "AssignmentGetAssignments",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Assignment objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Assignment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Assignment resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/assignments/summary": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Assignment"
                ],
                "summary": "Get a summary of assignments for the given portfolio.",
                "description": "",
                "operationId": "AssignmentGetAssignmentSummary",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "portfolioKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Assignment objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Assignment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Assignment resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankaccounts": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "BankAccount"
                ],
                "summary": "Get a list of bank accounts for the given investor.",
                "description": "",
                "operationId": "BankAccountGetBankAccounts",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching BankAccount objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BankAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target BankAccount resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "BankAccount"
                ],
                "summary": "Create a new bank account for the given investor.",
                "description": "",
                "operationId": "BankAccountAddBankAccount",
                "parameters": [],
                "requestBody": {
                    "description": "BankAccount data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "accountName": {
                                                "type": "string"
                                            },
                                            "accountNumber": {
                                                "type": "string"
                                            },
                                            "code": {
                                                "type": "string"
                                            },
                                            "company": {
                                                "type": "string"
                                            },
                                            "investorKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the BankAccount object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BankAccount"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target BankAccount resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "BankAccount"
                ],
                "summary": "Change the details of the matching bank account.",
                "description": "",
                "operationId": "BankAccountUpdateBankAccount",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "accountKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "BankAccount data for PATCH request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "accountName": {
                                                "type": "string"
                                            },
                                            "accountNumber": {
                                                "type": "string"
                                            },
                                            "code": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target BankAccount resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankbranches": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "BankBranch"
                ],
                "summary": "Get a full list of bank branches with BSB/code.",
                "description": "",
                "operationId": "BankBranchGetBankBranches",
                "parameters": [
                    {
                        "name": "rows",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching BankBranch objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BankBranch"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target BankBranch resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commissionsplits": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "CommissionSplit"
                ],
                "summary": "Get's a list of the commision splits (linked to payments) for this advisor.",
                "description": "",
                "operationId": "CommissionSplitGetCommissionSplits",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorPaymentKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching CommissionSplit objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommissionSplit"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target CommissionSplit resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commissionsummaries": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "CommissionSummary"
                ],
                "summary": "List the commission payments for the given advisor.",
                "description": "",
                "operationId": "CommissionSummaryGetCommissionSummaries",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching CommissionSummary objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommissionSummary"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target CommissionSummary resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/communicationmodes": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "CommunicationMode"
                ],
                "summary": "Lists the available communication modes.",
                "description": "",
                "operationId": "CommunicationModeGetCommunicationModes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching CommunicationMode objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommunicationMode"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target CommunicationMode resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/communicationoptions": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "CommunicationOption"
                ],
                "summary": "Get the communication options for the company.",
                "description": "",
                "operationId": "CommunicationOptionGetCommunicationOptions",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching CommunicationOption objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommunicationOption"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target CommunicationOption resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/countries": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "List all the countries available.",
                "description": "",
                "operationId": "CountryGetAllCountries",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Country objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Country"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Country resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/disallowedcommunications/{accountKey}/account": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "DisallowedCommunication"
                ],
                "summary": "Get a list of communication modes the investor has elected *not* to use at account level.",
                "description": "",
                "operationId": "DisallowedCommunicationGetAccountDisallowedCommuncations",
                "parameters": [
                    {
                        "name": "accountKey",
                        "in": "path",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a single matching DisallowedCommunication object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DisallowedCommunication"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match the DisallowedCommunication resource using the given identifier or one of the resources specified by a field in the request. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/disallowedcommunications/{portfolioKey}/portfolio": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "DisallowedCommunication"
                ],
                "summary": "Get a list of communication modes the investor has elected *not* to use at portfolio level.",
                "description": "",
                "operationId": "DisallowedCommunicationGetPortfolioDisallowedCommuncations",
                "parameters": [
                    {
                        "name": "portfolioKey",
                        "in": "path",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a single matching DisallowedCommunication object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/DisallowedCommunication"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match the DisallowedCommunication resource using the given identifier or one of the resources specified by a field in the request. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/distributionschedules": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "DistributionSchedule"
                ],
                "summary": "Get a specific income schedule's details.",
                "description": "",
                "operationId": "DistributionScheduleGetSchedule",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching DistributionSchedule objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DistributionSchedule"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target DistributionSchedule resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "DistributionSchedule"
                ],
                "summary": "update - Run Income Schedule Update\n",
                "description": "",
                "operationId": "DistributionScheduleRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_distributionschedules_post_update"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target DistributionSchedule resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/distributionsummaries": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "DistributionSummary"
                ],
                "summary": "Get a summary of past distributions for given investor.",
                "description": "",
                "operationId": "DistributionSummaryGetDistributionSummary",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "portfolioKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fundKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "unitClassKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "exDateFrom",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "exDateTo",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "paymentDateFrom",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "paymentDateTo",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "entitlementNumber",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching DistributionSummary objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DistributionSummary"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target DistributionSummary resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/forgottenpasswords": {
            "summary": "",
            "description": "",
            "post": {
                "tags": [
                    "ForgottenPassword"
                ],
                "summary": "validate - Allows a portal login to request a reset of their password.\n",
                "description": "",
                "operationId": "ForgottenPasswordRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_forgottenpasswords_post_validate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the ForgottenPassword object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/ForgottenPassword"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target ForgottenPassword resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/funds": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Fund"
                ],
                "summary": "Get a list of all funds available.",
                "description": "",
                "operationId": "FundGetAllFunds",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Fund objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Fund"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Fund resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/funds/{key}": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Fund"
                ],
                "summary": "Get a specific fund's details.",
                "description": "",
                "operationId": "FundGetFund",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a single matching Fund object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Fund"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match the Fund resource using the given identifier or one of the resources specified by a field in the request. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/investmentsummaries": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "InvestmentSummary"
                ],
                "summary": "Get a breakdown of the given investor's investments.",
                "description": "",
                "operationId": "InvestmentSummaryGetInvestmentSummary",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching InvestmentSummary objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InvestmentSummary"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target InvestmentSummary resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/investmentsummaries/keys": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "InvestmentSummary"
                ],
                "summary": "Get a breakdown of the given investor's investments.",
                "description": "",
                "operationId": "InvestmentSummaryGetInvestmentSummaryKeys",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching InvestmentSummary objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InvestmentSummary"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target InvestmentSummary resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/investmentsummaries/wht": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "InvestmentSummary"
                ],
                "summary": "Get a breakdown of the given investor's investments.",
                "description": "",
                "operationId": "InvestmentSummaryGetInvestmentSummaryKeysWHT",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching InvestmentSummary objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InvestmentSummary"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target InvestmentSummary resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/investorfunds": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "InvestorFund"
                ],
                "summary": "A list of funds the given investor has a holding in (used for selection of input data for \"summary\" -type services).",
                "description": "",
                "operationId": "InvestorFundGetInvestorFunds",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorNumber",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching InvestorFund objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InvestorFund"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target InvestorFund resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/investorportfoliofunds": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "InvestorPortfolioFund"
                ],
                "summary": "A list of funds the given investor has a holding in (used for selection of input data for \"summary\" -type services).",
                "description": "",
                "operationId": "InvestorPortfolioFundGetInvestorPortfolioFunds",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorNumber",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching InvestorPortfolioFund objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/InvestorPortfolioFund"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target InvestorPortfolioFund resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/investors": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Investor"
                ],
                "summary": "Get investor details by key values.",
                "description": "",
                "operationId": "InvestorGetInvestors",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "givenName",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "surname",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "externalID",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "birthDate",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Investor objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Investor"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Investor resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Investor"
                ],
                "summary": "Create a new investor. Call from a privileged account.",
                "description": "",
                "operationId": "InvestorCreateInvestor",
                "parameters": [],
                "requestBody": {
                    "description": "Investor data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "abn": {
                                                "type": "string"
                                            },
                                            "accounts": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Investor"
                                                }
                                            },
                                            "addresses": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Investor"
                                                }
                                            },
                                            "birthDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "communicationMode": {
                                                "type": "string"
                                            },
                                            "company": {
                                                "type": "string"
                                            },
                                            "domicile": {
                                                "type": "string"
                                            },
                                            "entityType": {
                                                "type": "string"
                                            },
                                            "externalID": {
                                                "type": "string"
                                            },
                                            "gender": {
                                                "type": "string"
                                            },
                                            "givenName": {
                                                "type": "string"
                                            },
                                            "password": {
                                                "type": "string"
                                            },
                                            "portalAccess": {
                                                "type": "boolean"
                                            },
                                            "salutation": {
                                                "type": "string"
                                            },
                                            "surname": {
                                                "type": "string"
                                            },
                                            "tfn": {
                                                "type": "string"
                                            },
                                            "tfnDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "type": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the Investor object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Investor"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Investor resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Investor"
                ],
                "summary": "update - Update an investor's details. All fields are optional.\n",
                "description": "",
                "operationId": "InvestorRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_investors_post_update"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Investor resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/investors/{number}": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Investor"
                ],
                "summary": "Get details for an investor.",
                "description": "",
                "operationId": "InvestorGetInvestor",
                "parameters": [
                    {
                        "name": "number",
                        "in": "path",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a single matching Investor object.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Investor"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match the Investor resource using the given identifier or one of the resources specified by a field in the request. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logininfo": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "LoginInfo"
                ],
                "summary": "Gets the details for the given login.",
                "description": "",
                "operationId": "LoginInfoGetLoginInfo",
                "parameters": [
                    {
                        "name": "login",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching LoginInfo objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/LoginInfo"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target LoginInfo resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/owners": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Owner"
                ],
                "summary": "Get a list of ownersfor the given portfolio (this includes the primary owner).",
                "description": "",
                "operationId": "OwnerGetOwners",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "portfolioKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Owner objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Owner"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Owner resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/passwordchange": {
            "summary": "",
            "description": "",
            "post": {
                "tags": [
                    "PasswordChange"
                ],
                "summary": "change - Change the password for the portal user.\n",
                "description": "",
                "operationId": "PasswordChangeRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_passwordchange_post_change"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the PasswordChange object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PasswordChange"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target PasswordChange resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/passwordreset": {
            "summary": "",
            "description": "",
            "post": {
                "tags": [
                    "PasswordReset"
                ],
                "summary": "reset - \n\t\t\t  Allows a portal user to reset their password. This must be done before \n\t\t\t  the token expires.\n\t\t\t\n",
                "description": "",
                "operationId": "PasswordResetRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_passwordreset_post_reset"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the PasswordReset object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/PasswordReset"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target PasswordReset resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/payments": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Payment"
                ],
                "summary": "Get a list of payments for the given entitlement.",
                "description": "",
                "operationId": "PaymentGetPayments",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "entitlementKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Payment objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Payment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Payment resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paymenttypes": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "PaymentType"
                ],
                "summary": "Get a list of payment types. This is accrosss companies.",
                "description": "",
                "operationId": "PaymentTypeGetPaymentTypes",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching PaymentType objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PaymentType"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target PaymentType resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/portfolioaddresses": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "PortfolioAddress"
                ],
                "summary": "Get all addresses linked to this portfolio.",
                "description": "",
                "operationId": "PortfolioAddressGetAddresses",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "portfolioKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching PortfolioAddress objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PortfolioAddress"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target PortfolioAddress resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "PortfolioAddress"
                ],
                "summary": "update - Replace the linked address with another from the investor.\n",
                "description": "",
                "operationId": "PortfolioAddressRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_portfolioaddresses_post_update"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target PortfolioAddress resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/portfoliobalance": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "PortfolioBalance"
                ],
                "summary": "Get a list of balance changes for a period. Amounts are in units.",
                "description": "",
                "operationId": "PortfolioBalanceGetBalanceHistory",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching PortfolioBalance objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/PortfolioBalance"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target PortfolioBalance resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/portfolios": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Get Portfolio by key criteria",
                "description": "",
                "operationId": "PortfolioGetPortfoliosbyParams",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "investorName",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "externalId",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Portfolio objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Portfolio"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Portfolio resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "\n\t\t\t\tCreate a new portfolio for the given investor. An address and at least \n\t\t\t\ta default standing instruction is required.",
                "description": "",
                "operationId": "PortfolioCreatePortfolio",
                "parameters": [],
                "requestBody": {
                    "description": "Portfolio data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "addresses": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Portfolio"
                                                }
                                            },
                                            "advisorKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "annualReportCommunication": {
                                                "type": "string"
                                            },
                                            "annualReportElection": {
                                                "type": "string"
                                            },
                                            "company": {
                                                "type": "string"
                                            },
                                            "currencyCode": {
                                                "type": "string"
                                            },
                                            "distributionMethod": {
                                                "type": "string"
                                            },
                                            "externalId": {
                                                "type": "string"
                                            },
                                            "investorKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "noMarketing": {
                                                "type": "boolean"
                                            },
                                            "preferredCommunicationMode": {
                                                "type": "string"
                                            },
                                            "reinvestmentSplit": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "standingInstructions": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Portfolio"
                                                }
                                            },
                                            "taxClientKey": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the Portfolio object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Portfolio"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Portfolio resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/portfolios/communicationoptions": {
            "summary": "",
            "description": "",
            "patch": {
                "tags": [
                    "Portfolio"
                ],
                "summary": "Update the communication options for this portfolio.",
                "description": "",
                "operationId": "PortfolioSetCommunicationOptions",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Portfolio data for PATCH request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "annualReportCommunication": {
                                                "type": "string"
                                            },
                                            "annualReportElection": {
                                                "type": "string"
                                            },
                                            "noMarketing": {
                                                "type": "boolean"
                                            },
                                            "preferredCommunicationMode": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": false
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Portfolio resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prices": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Price"
                ],
                "summary": "List prices for the given company and date range.",
                "description": "",
                "operationId": "PriceGetPrices",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fundKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "unitClassKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fromEffectiveDate",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "toEffectiveDate",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Price objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Price"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Price resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/redemptions": {
            "summary": "",
            "description": "",
            "put": {
                "tags": [
                    "Redemption"
                ],
                "summary": "Create a new redemption by unit or net amount. Uses default fees.",
                "description": "",
                "operationId": "RedemptionCreateRedemption",
                "parameters": [],
                "requestBody": {
                    "description": "Redemption data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "bankAccountKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "company": {
                                                "type": "string"
                                            },
                                            "currency": {
                                                "type": "string"
                                            },
                                            "effectiveDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "externalReference": {
                                                "type": "string"
                                            },
                                            "fundKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "gross": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "orderDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "paymentMethod": {
                                                "type": "string"
                                            },
                                            "portfolioKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "reference": {
                                                "type": "string"
                                            },
                                            "settleAmount": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "subType": {
                                                "type": "string"
                                            },
                                            "unitClassKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "units": {
                                                "type": "number",
                                                "format": "double"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the Redemption object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Redemption"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Redemption resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/redemptionsettlement": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "RedemptionSettlement"
                ],
                "summary": "Get a list of priced redemptions by fundCode",
                "description": "",
                "operationId": "redemptionSettlementGetRedsByFundCode",
                "parameters": [
                    {
                        "name": "fundCode",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching RedemptionSettlement objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RedemptionSettlement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target RedemptionSettlement resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "RedemptionSettlement"
                ],
                "summary": "autosettle - Settle Redemption\n",
                "description": "",
                "operationId": "redemptionSettlementRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_redemptionsettlement_post_autosettle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target RedemptionSettlement resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/standinginstructionhierarchies": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "StandingInstructionHierarchy"
                ],
                "summary": "Get a list settlement instructions for the given account.",
                "description": "",
                "operationId": "StandingInstructionHierarchyGetStandingInstructions",
                "parameters": [
                    {
                        "name": "company",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "portfolioKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching StandingInstructionHierarchy objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StandingInstructionHierarchy"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target StandingInstructionHierarchy resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "summary": "",
            "description": "",
            "put": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Create a new subscription by unit or settlement amount using key values.",
                "description": "",
                "operationId": "SubscriptionCreateSubscription",
                "parameters": [],
                "requestBody": {
                    "description": "Subscription data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "bankAccountKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "company": {
                                                "type": "string"
                                            },
                                            "currency": {
                                                "type": "string"
                                            },
                                            "effectiveDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "externalReference": {
                                                "type": "string"
                                            },
                                            "fundKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "gross": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "net": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "orderDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "paymentMethod": {
                                                "type": "string"
                                            },
                                            "portfolioKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "reference": {
                                                "type": "string"
                                            },
                                            "subType": {
                                                "type": "string"
                                            },
                                            "unitClassKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "units": {
                                                "type": "number",
                                                "format": "double"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the Subscription object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Subscription"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Subscription resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriptionsettlement": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "SubscriptionSettlement"
                ],
                "summary": "Get a list of priced subscriptions by fundCode",
                "description": "",
                "operationId": "subscriptionSettlementGetSubsByFundCode",
                "parameters": [
                    {
                        "name": "fundCode",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching SubscriptionSettlement objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SubscriptionSettlement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target SubscriptionSettlement resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SubscriptionSettlement"
                ],
                "summary": "autosettle - Settle Subscription\n",
                "description": "",
                "operationId": "subscriptionSettlementRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_subscriptionsettlement_post_autosettle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target SubscriptionSettlement resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/switches": {
            "summary": "",
            "description": "",
            "put": {
                "tags": [
                    "Switch"
                ],
                "summary": "Create a new switch by unit or settlement amount using Keys",
                "description": "",
                "operationId": "SwitchCreateSwitch",
                "parameters": [],
                "requestBody": {
                    "description": "Switch data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "company": {
                                                "type": "string"
                                            },
                                            "fromFundKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "fromUnitClassKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "orderDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "portfolioKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "settleAmount": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "switchInExternalReference": {
                                                "type": "string"
                                            },
                                            "switchInReference": {
                                                "type": "string"
                                            },
                                            "switchOutCurrency": {
                                                "type": "string"
                                            },
                                            "switchOutExternalReference": {
                                                "type": "string"
                                            },
                                            "switchOutGross": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "switchOutReference": {
                                                "type": "string"
                                            },
                                            "switchOutSubType": {
                                                "type": "string"
                                            },
                                            "toFundKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "toUnitClassKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "units": {
                                                "type": "number",
                                                "format": "double"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the Switch object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Switch"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Switch resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactionauthorisation": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "TransactionAuthorisation"
                ],
                "summary": "Get a list of unauth transactions by fundCode",
                "description": "",
                "operationId": "transactionAuthorisationGetUnAuthByFundCode",
                "parameters": [
                    {
                        "name": "fundCode",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching TransactionAuthorisation objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionAuthorisation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target TransactionAuthorisation resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TransactionAuthorisation"
                ],
                "summary": "autoauth - Authorise Transaction\n",
                "description": "",
                "operationId": "transactionAuthorisationRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_transactionauthorisation_post_autoauth"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Operation was successful but had nothing to return."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target TransactionAuthorisation resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactionreporttypes": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "TransactionReportType"
                ],
                "summary": "Gets a list of available transaction types for the given company.",
                "description": "",
                "operationId": "TransactionReportTypeGetTransactionTypes",
                "parameters": [
                    {
                        "name": "companyKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching TransactionReportType objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TransactionReportType"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target TransactionReportType resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transactions": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a list of transactions for the given company and date range.",
                "description": "",
                "operationId": "TransactionGetTransactionsByDate",
                "parameters": [
                    {
                        "name": "portfolioKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "investorKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "advisorKey",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effectiveDateFrom",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "effectiveDateTo",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "externalReference",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching Transaction objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Transaction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Transaction resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/transfers": {
            "summary": "",
            "description": "",
            "put": {
                "tags": [
                    "Transfer"
                ],
                "summary": "Create a new transfer by unit or settlement amount",
                "description": "",
                "operationId": "TransferCreateTransfer",
                "parameters": [],
                "requestBody": {
                    "description": "Transfer data for PUT request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "company": {
                                                "type": "string"
                                            },
                                            "portfolioKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "transferInPortfolioKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "transferOutEffectiveDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "transferOutFundKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "transferOutNet": {
                                                "type": "number",
                                                "format": "double"
                                            },
                                            "transferOutOrderDate": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "transferOutUnitClassKey": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "transferOutUnits": {
                                                "type": "number",
                                                "format": "double"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Operation was successful and object created. Response contains the Transfer object.",
                        "headers": {
                            "Location": {
                                "$ref": "#/components/headers/Location"
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Transfer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target Transfer resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unitclasses": {
            "summary": "",
            "description": "",
            "get": {
                "tags": [
                    "UnitClass"
                ],
                "summary": "Get all the unit classes for the given fund.",
                "description": "",
                "operationId": "UnitClassGetUnitClasses",
                "parameters": [
                    {
                        "name": "rows",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "fundKey",
                        "in": "query",
                        "required": true,
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation was successful and response contains a list of matching UnitClass objects. List may be empty if no match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UnitClass"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target UnitClass resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unitpriceupdate": {
            "summary": "",
            "description": "",
            "post": {
                "tags": [
                    "UnitPriceUpdate"
                ],
                "summary": "batch - UPU\n",
                "description": "",
                "operationId": "unitPriceUpdateRootPostHandler",
                "parameters": [],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/request_unitpriceupdate_post_batch"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Operation was successful and processing will be done asynchronously."
                    },
                    "400": {
                        "$ref": "#/components/responses/400_bad_request"
                    },
                    "401": {
                        "$ref": "#/components/responses/401_unauthorised"
                    },
                    "403": {
                        "$ref": "#/components/responses/403_forbidden"
                    },
                    "404": {
                        "description": "Operation failed to match one of the resources specified by a field in the request. The target UnitPriceUpdate resource was valid. Any available information is provided in the response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error_message"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string"
                    },
                    "defaultCommunicationMode": {
                        "type": "string"
                    },
                    "preferredCommunicationMode": {
                        "type": "string"
                    },
                    "annualReportCommunication": {
                        "type": "string"
                    },
                    "defaultAnnualReportCommunication": {
                        "type": "string"
                    },
                    "noCommFlagList": {
                        "type": "string"
                    },
                    "noMarketing": {
                        "type": "boolean"
                    },
                    "annualReportElection": {
                        "type": "string"
                    },
                    "defaultAnnualReportElection": {
                        "type": "string"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Owner": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "salutation": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CommunicationMode": {
                "type": "object",
                "properties": {
                    "communicationMode": {
                        "type": "string"
                    }
                }
            },
            "Address": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "line4": {
                        "type": "string"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "homePhone": {
                        "type": "string"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "communicationMode": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "mobilePhone": {
                        "type": "string"
                    },
                    "postCode": {
                        "type": "string"
                    },
                    "workPhone": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "line3": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "line2": {
                        "type": "string"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "line1": {
                        "type": "string"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "email": {
                        "type": "string"
                    },
                    "defaultAddress": {
                        "type": "boolean"
                    }
                }
            },
            "UnitClass": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "exclude": {
                        "type": "boolean"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "TransactionReportType": {
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "InvestorFund": {
                "type": "object",
                "properties": {
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioName": {
                        "type": "string"
                    }
                }
            },
            "Assignment": {
                "type": "object",
                "properties": {
                    "investor": {
                        "type": "string"
                    },
                    "amount": {
                        "type": "number",
                        "format": "double"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AdvisorHierarchy": {
                "type": "object",
                "properties": {
                    "level2AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "level2AdvisorName": {
                        "type": "string"
                    },
                    "totalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "level3AdvisorName": {
                        "type": "string"
                    },
                    "level2AdvisorType": {
                        "type": "string"
                    },
                    "level3AdvisorNumber": {
                        "type": "string"
                    },
                    "level2AdvisorNumber": {
                        "type": "string"
                    },
                    "level3AdvisorType": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "level1AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "level3AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "request_distributionschedules_post_update": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {

                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "update"
                        ]
                    }
                }
            },
            "AgentAddress": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "line4": {
                        "type": "string"
                    },
                    "addressKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "homePhone": {
                        "type": "string"
                    },
                    "agentKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "mobilePhone": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "postCode": {
                        "type": "string"
                    },
                    "workPhone": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "line3": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "line2": {
                        "type": "string"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "line1": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "defaultAddress": {
                        "type": "boolean"
                    }
                }
            },
            "PasswordReset": {
                "type": "object",
                "properties": {
                    "newPassword": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "significantDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "Subscription": {
                "type": "object",
                "properties": {
                    "bankAccountName": {
                        "type": "string"
                    },
                    "unitClassCode": {
                        "type": "string"
                    },
                    "gross": {
                        "type": "number",
                        "format": "double"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bankAccountKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "units": {
                        "type": "number",
                        "format": "double"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "externalReference": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "net": {
                        "type": "number",
                        "format": "double"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "error_message": {
                "type": "object",
                "properties": {
                    "detailMessage": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "properties": {
                            "errors": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "text": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "AdvisorFundHierachy": {
                "type": "object",
                "properties": {
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "SubscriptionSettlement": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string"
                    },
                    "effDate": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "AnnualReportElectionType": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "defaultType": {
                        "type": "boolean"
                    }
                }
            },
            "request_investors_post_update": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "string"
                            },
                            "key": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "gender": {
                                "type": "string"
                            },
                            "tfnDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "surname": {
                                "type": "string"
                            },
                            "givenName": {
                                "type": "string"
                            },
                            "domicile": {
                                "type": "string"
                            },
                            "externalID": {
                                "type": "string"
                            },
                            "salutation": {
                                "type": "string"
                            },
                            "abn": {
                                "type": "string"
                            },
                            "birthDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "tfn": {
                                "type": "string"
                            },
                            "communicationMode": {
                                "type": "string"
                            }
                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "update"
                        ]
                    }
                }
            },
            "request_passwordchange_post_change": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "oldPassword": {
                                "type": "string"
                            },
                            "newPassword": {
                                "type": "string"
                            },
                            "confirmPassword": {
                                "type": "string"
                            }
                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "change"
                        ]
                    }
                }
            },
            "Payment": {
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string"
                    },
                    "reinvest": {
                        "type": "boolean"
                    },
                    "settleAccountName": {
                        "type": "string"
                    },
                    "entitlementKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "settleAccountKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "incomeMethod": {
                        "type": "string"
                    },
                    "settleAccountBSB": {
                        "type": "string"
                    },
                    "settleAccountNumber": {
                        "type": "string"
                    }
                }
            },
            "DistributionSchedule": {
                "type": "object",
                "properties": {
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Transaction": {
                "type": "object",
                "properties": {
                    "totalFees": {
                        "type": "number",
                        "format": "double"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "reportingType": {
                        "type": "string"
                    },
                    "investorGivenName": {
                        "type": "string"
                    },
                    "totalCommissionPercent": {
                        "type": "number",
                        "format": "double"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCurrency": {
                        "type": "string"
                    },
                    "units": {
                        "type": "number",
                        "format": "double"
                    },
                    "fundManagerFee": {
                        "type": "number",
                        "format": "double"
                    },
                    "type": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "loadingDiscount": {
                        "type": "number",
                        "format": "double"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "reportingStatus": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitClassName": {
                        "type": "string"
                    },
                    "fundManagerFeeDiscount": {
                        "type": "number",
                        "format": "double"
                    },
                    "commission": {
                        "type": "number",
                        "format": "double"
                    },
                    "net": {
                        "type": "number",
                        "format": "double"
                    },
                    "settleNetofFundManagerFee": {
                        "type": "boolean"
                    },
                    "portfolioName": {
                        "type": "string"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorSurname": {
                        "type": "string"
                    },
                    "gross": {
                        "type": "number",
                        "format": "double"
                    },
                    "settled": {
                        "type": "boolean"
                    },
                    "bankAccountKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effectiveDateTo": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "tax": {
                        "type": "number",
                        "format": "double"
                    },
                    "loading": {
                        "type": "number",
                        "format": "double"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effectiveDateFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "externalReference": {
                        "type": "string"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "pricedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "totalFeeDiscount": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "Switch": {
                "type": "object",
                "properties": {
                    "switchInUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "switchOutFundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchOutSubType": {
                        "type": "string"
                    },
                    "switchOutKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchInUnitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchOutExternalReference": {
                        "type": "string"
                    },
                    "switchOutUnitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchOutUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "switchOutNet": {
                        "type": "number",
                        "format": "double"
                    },
                    "switchInKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchInEffectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "switchOutFundCode": {
                        "type": "string"
                    },
                    "switchOutCurrency": {
                        "type": "string"
                    },
                    "switchInNet": {
                        "type": "number",
                        "format": "double"
                    },
                    "switchInReference": {
                        "type": "string"
                    },
                    "switchInUnitClassCode": {
                        "type": "string"
                    },
                    "switchInFundCode": {
                        "type": "string"
                    },
                    "switchInStatus": {
                        "type": "string"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchOutReference": {
                        "type": "string"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchInGross": {
                        "type": "number",
                        "format": "double"
                    },
                    "switchOutNumber": {
                        "type": "string"
                    },
                    "switchInFundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "switchInOrderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "switchInSubType": {
                        "type": "string"
                    },
                    "switchOutGross": {
                        "type": "number",
                        "format": "double"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "switchOutOrderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "switchOutStatus": {
                        "type": "string"
                    },
                    "switchOutEffectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "switchInExternalReference": {
                        "type": "string"
                    },
                    "switchOutUnitClassCode": {
                        "type": "string"
                    },
                    "switchInNumber": {
                        "type": "string"
                    }
                }
            },
            "AdvisorPayment": {
                "type": "object",
                "properties": {
                    "paidDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "amountPaid": {
                        "type": "number",
                        "format": "double"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paymentKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "feeType": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AdvisorInvestor": {
                "type": "object",
                "properties": {
                    "investorSurname": {
                        "type": "string"
                    },
                    "investorSalutation": {
                        "type": "string"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "investorGivenName": {
                        "type": "string"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorType": {
                        "type": "string"
                    }
                }
            },
            "StandingInstructionHierarchy": {
                "type": "object",
                "properties": {
                    "bankAccountName": {
                        "type": "string"
                    },
                    "branchCode": {
                        "type": "string"
                    },
                    "instructionType": {
                        "type": "string"
                    },
                    "bankAccountKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorName": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "branchName": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "bankAccountNumber": {
                        "type": "string"
                    },
                    "instructionTypeKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "accountKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Price": {
                "type": "object",
                "properties": {
                    "unitClassCode": {
                        "type": "string"
                    },
                    "offerPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "authorisedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bidPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "navPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "priceDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "fromEffectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "unitClassName": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "toEffectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AdvisorTotal": {
                "type": "object",
                "properties": {
                    "advisorNumber": {
                        "type": "string"
                    },
                    "subAdvisorNumber": {
                        "type": "string"
                    },
                    "subAdvisorName": {
                        "type": "string"
                    },
                    "subAdvisorType": {
                        "type": "string"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advisorType": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "advisorName": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    },
                    "subAdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Transfer": {
                "type": "object",
                "properties": {
                    "transferOutUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "transferOutExternalReference": {
                        "type": "string"
                    },
                    "transferOutNumber": {
                        "type": "string"
                    },
                    "transferInFundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferInOrderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "transferOutStatus": {
                        "type": "string"
                    },
                    "transferInPortfolioNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferOutOrderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "transferInEffectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "transferOutFundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferOutReference": {
                        "type": "string"
                    },
                    "transferInUnitClassCode": {
                        "type": "string"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferInGross": {
                        "type": "number",
                        "format": "double"
                    },
                    "transferInExternalReference": {
                        "type": "string"
                    },
                    "transferOutGross": {
                        "type": "number",
                        "format": "double"
                    },
                    "transferInFundCode": {
                        "type": "string"
                    },
                    "transferOutCurrency": {
                        "type": "string"
                    },
                    "transferOutFundCode": {
                        "type": "string"
                    },
                    "transferInNet": {
                        "type": "number",
                        "format": "double"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "transferOutUnitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferInKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferInUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "transferOutUnitClassCode": {
                        "type": "string"
                    },
                    "transferOutNet": {
                        "type": "number",
                        "format": "double"
                    },
                    "transferOutEffectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "transferOutKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferInNumber": {
                        "type": "string"
                    },
                    "transferInPortfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferInUnitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "transferInReference": {
                        "type": "string"
                    }
                }
            },
            "Country": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean"
                    },
                    "isoCode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "StandingInstruction": {
                "type": "object",
                "properties": {
                    "allocation": {
                        "type": "number",
                        "format": "double"
                    },
                    "instructionType": {
                        "type": "string"
                    },
                    "bankAccountKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paymentType": {
                        "type": "string"
                    }
                }
            },
            "request_passwordreset_post_reset": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "newPassword": {
                                "type": "string"
                            },
                            "confirmPassword": {
                                "type": "string"
                            },
                            "secret": {
                                "type": "string"
                            },
                            "login": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "significantDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "token": {
                                "type": "string"
                            }
                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "reset"
                        ]
                    }
                }
            },
            "RedemptionSettlement": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string"
                    },
                    "effDate": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "InvestorPortfolioFund": {
                "type": "object",
                "properties": {
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioName": {
                        "type": "string"
                    }
                }
            },
            "Fund": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string"
                    },
                    "billerCode": {
                        "type": "string"
                    }
                }
            },
            "CommunicationOption": {
                "type": "object",
                "properties": {
                    "deleted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "defaultOption": {
                        "type": "boolean"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "request_subscriptionsettlement_post_autosettle": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {

                        }
                    },
                    "data": {
                        "type": "object"
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "autosettle"
                        ]
                    }
                }
            },
            "request_forgottenpasswords_post_validate": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "confirmationURL": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "secret": {
                                "type": "string"
                            },
                            "login": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "significantDate": {
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "validate"
                        ]
                    }
                }
            },
            "request_addresses_post_update": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "investorNumber": {
                                "type": "string"
                            },
                            "key": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "country": {
                                "type": "string"
                            },
                            "mobilePhone": {
                                "type": "string"
                            },
                            "homePhone": {
                                "type": "string"
                            },
                            "postCode": {
                                "type": "string"
                            },
                            "workPhone": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "line3": {
                                "type": "string"
                            },
                            "fax": {
                                "type": "string"
                            },
                            "line2": {
                                "type": "string"
                            },
                            "line1": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "defaultAddress": {
                                "type": "boolean"
                            }
                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "update"
                        ]
                    }
                }
            },
            "DistributionSummary": {
                "type": "object",
                "properties": {
                    "entitlementUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitClassCode": {
                        "type": "string"
                    },
                    "reinvestSplit": {
                        "type": "number",
                        "format": "double"
                    },
                    "dollarsPerUnit": {
                        "type": "number",
                        "format": "double"
                    },
                    "exDateTo": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "paymentDateTo": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "scheduleTotal": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentDateFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCurrency": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "exDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "entitlementDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "entitlementTaxWithheld": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitClassName": {
                        "type": "string"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioName": {
                        "type": "string"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "entitlementNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "entitlementNetAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "distributionMethod": {
                        "type": "string"
                    },
                    "entitlementGrossAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "scheduleKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "exDateFrom": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "AgentBankAccount": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "agentKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                }
            },
            "InvestmentSummary": {
                "type": "object",
                "properties": {
                    "portfolioExternalId": {
                        "type": "string"
                    },
                    "ultimateReinvestmentSplit": {
                        "type": "number",
                        "format": "double"
                    },
                    "defaultCommunicationMode": {
                        "type": "string"
                    },
                    "preferredCommunicationMode": {
                        "type": "string"
                    },
                    "defaultAnnualReportCommunication": {
                        "type": "string"
                    },
                    "noCommFlagList": {
                        "type": "string"
                    },
                    "noMarketing": {
                        "type": "boolean"
                    },
                    "unitClassCode": {
                        "type": "string"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "investorName": {
                        "type": "string"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCurrency": {
                        "type": "string"
                    },
                    "defaultAnnualReportElection": {
                        "type": "string"
                    },
                    "balanceInCurrency": {
                        "type": "number",
                        "format": "double"
                    },
                    "languageKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "ultimateStatus": {
                        "type": "string"
                    },
                    "advisorNumber": {
                        "type": "string"
                    },
                    "annualReportCommunication": {
                        "type": "string"
                    },
                    "portfolioType": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "portfolioReinvestmentSplit": {
                        "type": "number",
                        "format": "double"
                    },
                    "unitClassName": {
                        "type": "string"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioName": {
                        "type": "string"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitsPrecision": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "pricePrecision": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "portfolioStatus": {
                        "type": "string"
                    },
                    "portfolioStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "bpayCRN": {
                        "type": "string"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advisorName": {
                        "type": "string"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "balanceInUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "distributionMethod": {
                        "type": "string"
                    },
                    "accountStartDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "annualReportElection": {
                        "type": "string"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "whtApplicable": {
                        "type": "boolean"
                    }
                }
            },
            "PaymentType": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "UnitPriceUpdate": {
                "type": "object",
                "properties": {
                    "fund": {
                        "type": "string"
                    }
                }
            },
            "request_redemptionsettlement_post_autosettle": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "string"
                            },
                            "effDate": {
                                "type": "string"
                            },
                            "fundCode": {
                                "type": "string"
                            },
                            "key": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    },
                    "data": {
                        "type": "object"
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "autosettle"
                        ]
                    }
                }
            },
            "PortfolioAddress": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "line4": {
                        "type": "string"
                    },
                    "addressKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "homePhone": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "mobilePhone": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "postCode": {
                        "type": "string"
                    },
                    "workPhone": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "line3": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "line2": {
                        "type": "string"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "line1": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "defaultAddress": {
                        "type": "boolean"
                    }
                }
            },
            "AdvisorFund": {
                "type": "object",
                "properties": {
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "LoginInfo": {
                "type": "object",
                "properties": {
                    "advisorProfileKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advisorProfileNumber": {
                        "type": "string"
                    },
                    "loginType": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "login": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "request_transactionauthorisation_post_autoauth": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "number": {
                                "type": "string"
                            },
                            "key": {
                                "type": "string"
                            }
                        }
                    },
                    "data": {
                        "type": "object"
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "autoauth"
                        ]
                    }
                }
            },
            "AdvisorSummaryByUnitClass": {
                "type": "object",
                "properties": {
                    "totalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassName": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "totalUnits": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Portfolio": {
                "type": "object",
                "properties": {
                    "defaultCommunicationMode": {
                        "type": "string"
                    },
                    "preferredCommunicationMode": {
                        "type": "string"
                    },
                    "advisorParentNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "defaultAnnualReportCommunication": {
                        "type": "string"
                    },
                    "noCommFlagList": {
                        "type": "string"
                    },
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PortfolioAddress"
                        }
                    },
                    "noMarketing": {
                        "type": "boolean"
                    },
                    "advisorExternalId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "standingInstructions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StandingInstruction"
                        }
                    },
                    "investorName": {
                        "type": "string"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "hin": {
                        "type": "string"
                    },
                    "defaultAnnualReportElection": {
                        "type": "string"
                    },
                    "advisorParentExternalId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "number": {
                        "type": "string"
                    },
                    "advisorNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "annualReportCommunication": {
                        "type": "string"
                    },
                    "advisorParentName": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "crn": {
                        "type": "string"
                    },
                    "externalId": {
                        "type": "string"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advisorName": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "taxClientKey": {
                        "type": "string"
                    },
                    "reinvestmentSplit": {
                        "type": "number",
                        "format": "double"
                    },
                    "distributionMethod": {
                        "type": "string"
                    },
                    "annualReportElection": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "PortfolioBalance": {
                "type": "object",
                "properties": {
                    "transactionType": {
                        "type": "boolean"
                    },
                    "fromDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "confirmedAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "balanceDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "toDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "confirmedBalanceAsAt": {
                        "type": "number",
                        "format": "double"
                    },
                    "unconfirmedBalanceAsAt": {
                        "type": "number",
                        "format": "double"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unconfirmedAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "accountKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "Advisor": {
                "type": "object",
                "properties": {
                    "givenName": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "dateAppointed": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "advisorName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "relationshipNumber": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "number": {
                        "type": "string"
                    },
                    "viewCommission": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "saluation": {
                        "type": "string"
                    },
                    "brokerName": {
                        "type": "string"
                    },
                    "relationshipKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "BankAccount": {
                "type": "object",
                "properties": {
                    "thirdParty": {
                        "type": "boolean"
                    },
                    "code": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "accountName": {
                        "type": "string"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "investorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ForgottenPassword": {
                "type": "object",
                "properties": {
                    "companyCode": {
                        "type": "string"
                    },
                    "confirmationURL": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "significantDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "DisallowedCommunication": {
                "type": "object",
                "properties": {
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "accountNumber": {
                        "type": "string"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "communicationMode": {
                        "type": "string"
                    },
                    "accountKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "BankBranch": {
                "type": "object",
                "properties": {
                    "country": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "bankName": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "request_portfolioaddresses_post_update": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object",
                        "properties": {
                            "key": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "addressKey": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "portfolioKey": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "update"
                        ]
                    }
                }
            },
            "PasswordChange": {
                "type": "object",
                "properties": {
                    "oldPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    },
                    "confirmPassword": {
                        "type": "string"
                    }
                }
            },
            "CommissionSplit": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "number",
                        "format": "double"
                    },
                    "percentage": {
                        "type": "number",
                        "format": "double"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "advisorPaymentKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "contractNumber": {
                        "type": "string"
                    },
                    "contractAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "feeType": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AdvisorSummaryLevel1": {
                "type": "object",
                "properties": {
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "investorNumber": {
                        "type": "string"
                    },
                    "level1AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "activePortfolio": {
                        "type": "boolean"
                    },
                    "unitClassName": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "fundName": {
                        "type": "string"
                    },
                    "portfolioName": {
                        "type": "string"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CommissionSummary": {
                "type": "object",
                "properties": {
                    "fromDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "processed": {
                        "type": "boolean"
                    },
                    "toDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "advisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "paymentKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paymentDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "paymentAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "paymentType": {
                        "type": "string"
                    }
                }
            },
            "Redemption": {
                "type": "object",
                "properties": {
                    "bankAccountName": {
                        "type": "string"
                    },
                    "unitClassCode": {
                        "type": "string"
                    },
                    "gross": {
                        "type": "number",
                        "format": "double"
                    },
                    "fundKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "bankAccountKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "units": {
                        "type": "number",
                        "format": "double"
                    },
                    "reference": {
                        "type": "string"
                    },
                    "externalReference": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "portfolioNumber": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "paymentMethod": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "net": {
                        "type": "number",
                        "format": "double"
                    },
                    "portfolioKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "Investor": {
                "type": "object",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Address"
                        }
                    },
                    "gender": {
                        "type": "string"
                    },
                    "tfnDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "externalID": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "number": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "tfnStatus": {
                        "type": "string"
                    },
                    "surname": {
                        "type": "string"
                    },
                    "validAbn": {
                        "type": "boolean"
                    },
                    "companyKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "idType": {
                        "type": "string"
                    },
                    "typeKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "loginKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "validTFN": {
                        "type": "boolean"
                    },
                    "portalAccess": {
                        "type": "boolean"
                    },
                    "abn": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "communicationMode": {
                        "type": "string"
                    },
                    "typeCode": {
                        "type": "string"
                    },
                    "domicile": {
                        "type": "string"
                    },
                    "salutation": {
                        "type": "string"
                    },
                    "accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BankAccount"
                        }
                    },
                    "tfn": {
                        "type": "string"
                    },
                    "abnStatus": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "TransactionAuthorisation": {
                "type": "object",
                "properties": {
                    "number": {
                        "type": "string"
                    },
                    "fundCode": {
                        "type": "string"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "key": {
                        "type": "string"
                    }
                }
            },
            "request_unitpriceupdate_post_batch": {
                "type": "object",
                "properties": {
                    "filter": {
                        "type": "object"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "fund": {
                                "type": "string"
                            }
                        }
                    },
                    "operation": {
                        "type": "string",
                        "enum": [
                            "batch"
                        ]
                    }
                }
            },
            "AdvisorSummaryLevel3": {
                "type": "object",
                "properties": {
                    "level2AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "level2AdvisorName": {
                        "type": "string"
                    },
                    "level3AdvisorNumber": {
                        "type": "string"
                    },
                    "level1AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalUnits": {
                        "type": "number",
                        "format": "double"
                    },
                    "totalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "level3AdvisorName": {
                        "type": "string"
                    },
                    "level1AdvisorName": {
                        "type": "string"
                    },
                    "level1AdvisorNumber": {
                        "type": "string"
                    },
                    "level2AdvisorNumber": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "level3AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AdvisorSummaryLevel2": {
                "type": "object",
                "properties": {
                    "level2AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "level2AdvisorName": {
                        "type": "string"
                    },
                    "totalAmount": {
                        "type": "number",
                        "format": "double"
                    },
                    "level1AdvisorName": {
                        "type": "string"
                    },
                    "level1AdvisorNumber": {
                        "type": "string"
                    },
                    "level2AdvisorNumber": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "level1AdvisorKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "rows": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unitClassKey": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalUnits": {
                        "type": "number",
                        "format": "double"
                    }
                }
            }
        },
        "responses": {
            "400_bad_request": {
                "description": "Operation failed either due to invalid request or a rule imposed in the underlying system. Any available information is provided in the response.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error_message"
                        }
                    }
                }
            },
            "403_forbidden": {
                "description": "The user is known but is not authorised for this operation.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error_message"
                        }
                    }
                }
            },
            "401_unauthorised": {
                "description": "The user is unknown or could not be authenticated.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/error_message"
                        }
                    }
                }
            }
        },
        "headers": {
            "Location": {
                "description": "Holds the URL to the created resource.",
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "basic": {
                "type": "http",
                "description": "HTTP Basic authentication.",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "basic": []
        }
    ],
    "tags": [],
    "externalDocs": {
        "url": "https://www.ssctech.com/",
        "description": ""
    }
}
